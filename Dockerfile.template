FROM balenalib/%%BALENA_MACHINE_NAME%%-python:3.5.6-stretch-build AS firmware

RUN install_packages git libusb-dev

WORKDIR /src

RUN git clone https://github.com/PaulStoffregen/teensy_loader_cli.git -b 2.1
RUN cd teensy_loader_cli && \
    make && \
    cd -

RUN git clone https://github.com/balena-io-modules/usbsdmux.git
RUN cd usbsdmux && \
    virtualenv -p python3 venv && \
    . venv/bin/activate && \
    pip install pyinstaller && \
    python setup.py install && \
    pyinstaller --onefile venv/bin/usbsdmux-configure && \
    deactivate && \
    cd -

FROM balenalib/%%BALENA_MACHINE_NAME%%-node:10.14.0-stretch-build AS build

WORKDIR /tmp/node

COPY package.json .
COPY package-lock.json .

RUN install_packages libdbus-1-dev libvirt-dev python

RUN npm ci

COPY tsconfig.json .
COPY typings typings
COPY lib lib
COPY bin bin

RUN npm run build

FROM balenalib/%%BALENA_MACHINE_NAME%%-node:10.14.0-stretch-run

ENV UDEV=1

WORKDIR /usr/app/firmware

RUN install_packages \
    libusb-dev libdbus-1-dev \
    qemu-system-x86 libvirt-daemon-system bridge-utils iproute dnsmasq iptables ebtables \
    libnss-mdns

COPY --from=firmware /src/usbsdmux/dist/usbsdmux-configure /usr/local/bin
COPY --from=firmware /src/teensy_loader_cli/teensy_loader_cli /usr/local/bin
COPY firmware/StandardFirmataPlus.ino.hex .
COPY firmware/SDcardSwitch.ino.hex .

# If we have external storage enabled let's mount it
RUN mkdir /mnt/storage
RUN echo "LABEL=STORAGE /mnt/storage ext2 rw,relatime 0 2" >> /etc/fstab

WORKDIR /usr/app

COPY entry.sh .

COPY --from=build /tmp/node/package.json .
COPY --from=build /tmp/node/node_modules node_modules
COPY --from=build /tmp/node/build build

EXPOSE 80 8080

CMD [ "./entry.sh" ]
